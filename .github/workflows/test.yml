name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  mysql:
    name: MySQL
    strategy:
      matrix:
        mysql: [5, 8]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: ${{ matrix.mysql }}
          mysql database: rel_test
          mysql user: rel
          mysql password: rel
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Test
        env:
          MYSQL_DATABASE: rel:rel@(127.0.0.1:3306)/rel_test
        run: |
          sleep 15
          go test -race ./...
        if: matrix.mysql != 8
      - name: Coverage
        env:
          MYSQL_DATABASE: rel:rel@(127.0.0.1:3306)/rel_test
        run: |
          sleep 15
          go test -race -coverprofile=coverage.txt -covermode=atomic ./...
        if: matrix.mysql == 8
      - name: Codecov
        uses: codecov/codecov-action@v1
        if: matrix.mysql == 8

  primaryreplica:
    name: Primary Replica
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Start mysql containers
        run: docker-compose -f "docker-compose.yml" up -d --build
      - name: Test
        env:
          TEST_PRIMARY_REPLICA: 'true'
        run: |
          sleep 15
          go test -race ./...
